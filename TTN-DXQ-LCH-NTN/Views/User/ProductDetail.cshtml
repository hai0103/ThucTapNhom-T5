@using TTN_DXQ_LCH_NTN.Models;
@model Product
@{
    ViewBag.Title = "ProductDetail";
    Layout = "~/Views/Shared/NguoiDungLayout.cshtml";
}

<div class="container cart" style="margin-top: 102px;">
    <div class="row">
        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"
            <h1>@Model.ProductName</h1>
            <h4 style="color: #ee4d2d;">@Model.Price</h4>
            <p>@Model.Description</p>

            @using (Html.BeginForm("Add", "GioHang", new { @ProductID = Model.ProductID, @strUrl = Request.Url.ToString() }))
            {
                //form
                <div class="total">
                    <div class="total-head">Số lượng</div>
                    <div class="input-group" style="width: 40%;margin: 10px 0;">
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-default btn-number" disabled="disabled" data-type="minus" data-field="quant[1]" style="background : red">
                                <span class="glyphicon glyphicon-minus"></span>
                            </button>
                        </span>
                        <input type="text" name="quant[1]" class="form-control input-number" value="1" min="1" max="10">
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-default btn-number" data-type="plus" data-field="quant[1]" style="background : powderblue">
                                <span class="glyphicon glyphicon-plus"></span>
                            </button>
                        </span>

                    </div>
                    <div class="available" style="margin-bottom: 29px;">(@Model.Total có sẵn)</div>
                </div>
                //endform

                <button class="btn btn-success add" style="margin-bottom: 70px;background-color: #ee4d2d;border-color: #ee4d2d;">Thêm vào giỏ</button>
            }

        </div>
        <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8">
            <div class="anh">
                <img src="@Url.Content(Model.Image)" class="img-responsive" alt="" />
            </div>
        </div>

    </div>
</div>
<script>
    $('.btn-number').click(function (e) {
        e.preventDefault();

        fieldName = $(this).attr('data-field');
        type = $(this).attr('data-type');
        var input = $("input[name='" + fieldName + "']");
        var currentVal = parseInt(input.val());
        if (!isNaN(currentVal)) {
            if (type == 'minus') {

                if (currentVal > input.attr('min')) {
                    input.val(currentVal - 1).change();
                }
                if (parseInt(input.val()) == input.attr('min')) {
                    $(this).attr('disabled', true);
                }

            } else if (type == 'plus') {

                if (currentVal < input.attr('max')) {
                    input.val(currentVal + 1).change();
                }
                if (parseInt(input.val()) == input.attr('max')) {
                    $(this).attr('disabled', true);
                }

            }
        } else {
            input.val(0);
        }
    });
    $('.input-number').focusin(function () {
        $(this).data('oldValue', $(this).val());
    });
    $('.input-number').change(function () {

        minValue = parseInt($(this).attr('min'));
        maxValue = parseInt($(this).attr('max'));
        valueCurrent = parseInt($(this).val());

        name = $(this).attr('name');
        if (valueCurrent >= minValue) {
            $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
        } else {
            alert('Sorry, the minimum value was reached');
            $(this).val($(this).data('oldValue'));
        }
        if (valueCurrent <= maxValue) {
            $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
        } else {
            alert('Sorry, the maximum value was reached');
            $(this).val($(this).data('oldValue'));
        }


    });
    $(".input-number").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right
            (e.keyCode >= 35 && e.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });

    //window.onload = function () {
    //    if (localStorage) {
    //        document.getElementById('contactForm').addEventListener('submit', function () {
    //            var name = document.getElementById('login').value;
    //            localStorage.setItem('name', name);
    //        });
    //    }
    //}2
</script>

